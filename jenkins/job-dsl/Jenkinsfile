#!groovy

pipeline {
    agent any
    tools {
        jdk 'oracle-jdk8u144-linux-x64'
        maven "maven-3.5.0"
    }
//    environment {
//        REPO_URL = 'www.my.repo'
//    }
    options {
        timestamps()
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Cleaning workspace ..."
                cleanWs()
                echo "Checkout master branch to workspace folder and checkout jenkins branch to subfolder 'jenkins'"
                checkout(
                        [$class: 'GitSCM',
                         branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false,
                         browser: [$class: 'GithubWeb', repoUrl: 'https://github.com/lerkasan/DevOps028.git'],
                         extensions: [[$class: 'CleanBeforeCheckout']],
                         gitTool: 'git-slave',
                         submoduleCfg: [],
                         userRemoteConfigs: [[url: 'https://github.com/lerkasan/DevOps028.git']]])
                checkout(
                        [$class: 'GitSCM',
                         branches: [[name: '*jenkins']], doGenerateSubmoduleConfigurations: false,
                         extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jenkins']],
                         gitTool: 'git-slave',
                         submoduleCfg: [],
                         userRemoteConfigs: [[url: 'https://github.com/lerkasan/DevOps028.git']]])
            }
        }
        stage("Test") {
            steps {
                sh "javac -version"
                echo "Testing project"
                sh "mvn clean test"
            }
        }
        stage("Build artifact and prepare AWS infrastructure") {
            steps {
                parallel (
                        prepare_infra: {
                            echo "Preparing AWS infrastructure ..."
                            sh "chmod +x jenkins/jenkins/job-dsl/*.sh"
                            sh "jenkins/jenkins/job-dsl/prepare-infra.sh"
                        },
                        build_jar: {
                            echo "Building jar ..."
                            sh "mvn clean package"
                            sh "jenkins/jenkins/job-dsl/postbuild-step.sh"
                            archiveArtifacts artifacts: 'target/*.jar', onlyIfSuccessful: true
                            //  archive "target/ROOT.war"
                            stash includes: 'target/*.jar', name: 'artifact'
                        }

                )
            }
        }
        stage("Deploy") {
            steps {
                echo "Deploying project"
                unstash 'artifact'
            //  unarchive()
                sh "jenkins/jenkins/job-dsl/deploy-step.sh"
            //  emailext body: '${BUILD_LOG_REGEX, regex="Webapp endpoint", showTruncatedLines=false}',
                emailext body: 'Webapp endpoint: ${env.ELB_HOST}:${env.ELB_PORT}',
                         subject: 'Web application Samsara was deployed',
                         to: 'lerkasan@gmail.com'
            }
        }
    }
}