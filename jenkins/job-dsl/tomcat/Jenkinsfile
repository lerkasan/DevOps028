#!groovy

pipeline {
    agent any
    tools {
        jdk 'oracle-jdk8u144-linux-x64'
        maven "maven-3.5.0"
    }
    options {
        timestamps()
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Checkout master branch to workspace folder and checkout jenkins branch to subfolder 'jenkins'"
                checkout(
                        [$class: 'GitSCM',
                         branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false,
                         browser: [$class: 'GithubWeb', repoUrl: 'https://github.com/lerkasan/DevOps028.git'],
                         extensions: [[$class: 'CleanBeforeCheckout']],
                         gitTool: 'git-slave',
                         submoduleCfg: [],
                         userRemoteConfigs: [[url: 'https://github.com/lerkasan/DevOps028.git']]])
                checkout(
                        [$class: 'GitSCM',
                         branches: [[name: '*jenkins']], doGenerateSubmoduleConfigurations: false,
                         extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'jenkins']],
                         gitTool: 'git-slave',
                         submoduleCfg: [],
                         userRemoteConfigs: [[url: 'https://github.com/lerkasan/DevOps028.git']]])
            }
        }
        stage("Test") {
            steps {
                sh "javac -version"
                echo "Testing project"
                sh "mvn clean test"
            }
        }
        stage("Prepare RDS and Tomcat") {
            steps {
                parallel (
                        prepare_rds: {
                            echo "Preparing RDS"
                            sh "chmod +x jenkins/jenkins/job-dsl/tomcat/*.sh"
                            sh "chmod +x jenkins/jenkins/infra/tomcat-aws-ami-init.sh"
                            sh "jenkins/jenkins/job-dsl/tomcat/jobdsl-prepare-rds-step.sh"
                        },
                        prepare_tomcat: {
                            echo "Preparing Tomcat"
                            sh "cd jenkins && jenkins/job-dsl/tomcat/jobdsl-prepare-tomcat-step.sh"
                        }

                )
            }
        }
        stage("Package war") {
            steps {
                echo "Packaging project"
                sh "jenkins/jenkins/job-dsl/tomcat/jobdsl-prebuild-step.sh"
                sh "mvn clean package"
                sh "jenkins/jenkins/job-dsl/tomcat/jobdsl-postbuild-step.sh"
                archiveArtifacts artifacts: 'target/ROOT.war', onlyIfSuccessful: true
            //  archive "target/ROOT.war"
                stash includes: 'target/ROOT.war', name: 'artifact'
            }
        }
        stage("Deploy") {
            steps {
                echo "Deploying to Tomcat"
                unstash 'artifact'
            //  unarchive()
                sh "jenkins/jenkins/job-dsl/tomcat/jobdsl-deploy-step.sh"
                emailext body: '${BUILD_LOG_REGEX, regex="Tomcat endpoint", showTruncatedLines=false}', subject: 'Web application Samsara was deployed to Tomcat', to: 'lerkasan@gmail.com'
            }
        }
    }
}