apiVersion: v1
kind: Service
metadata:
  name: registry
  labels:
    app: registry
spec:
  ports:
    - port: 5000
#      targetPort: 5000
      name: registry-port
    - port: 80
#      targetPort: 80
      name: registry-ui
  selector:
    app: registry
  type: LoadBalancer

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-storage
  labels:
    type: local
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/registry

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-vol-claim
  labels:
    app: registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: registry
  labels:
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
      - name: registry
        image: registry:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: registry-port
        env:
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: /var/lib/registry
          - name: REGISTRY_HTTP_ADDR
            value: 0.0.0.0:5000
#          - name: REGISTRY_HTTP_HOST
#            value: http://registry.lerkasan.de
            # https://registry.lerkasan.de
          - name: REGISTRY_HTTP_TLS_CERTIFICATE
            value: /cert/fullchain.pem
          - name: REGISTRY_HTTP_TLS_KEY
            value: /cert/privkey.pem
#          - name: REGISTRY_HTTP_TLS_LETSENCRYPT_CACHEFILE
#            value: /etc/docker/registry/letsencrypt.json
#          - name: REGISTRY_HTTP_TLS_LETSENCRYPT_EMAIL
#            value: lerkasan@gmail.com
        volumeMounts:
        - name: registry-storage
          mountPath: /var/lib/registry
        - name: tls-cert
          mountPath: /cert
      - name: registry-ui
        image: konradkleine/docker-registry-frontend:v2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: registry-ui
          protocol: TCP
        env:
          - name: ENV_DOCKER_REGISTRY_HOST
            value: "localhost"
          - name: ENV_DOCKER_REGISTRY_PORT
            value: "5000"
          - name: ENV_DOCKER_REGISTRY_USE_SSL
            value: "1"
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: registry-vol-claim
      - name: tls-cert
        hostPath:
          path: /home/admin
#          type: Directory
#      - name: tls-cert
#        awsElasticBlockStore:
#          volumeID: aws://us-west-2a/vol-0fce34e488cf98509
#          fsType: ext4